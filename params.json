{
    "name": "Berlin-clock-scala-kata",
    "tagline": "A Kata in Scala on Berlin Clock system.",
    "body": "## Synopsis

![image](http://agilekatas.co.uk/static/img/katas/kata_berlinclock.png)

The Berlin Clock (Mengenlehreclock or Berlin Uhr) is a clock that tells the time using a series of illuminated coloured blocks, as you can see in the picture for this project.

The top lamp blinks to show seconds- it is illuminated on even seconds and off on odd seconds.

The next two rows represent hours. The upper row represents 5 hour blocks and is made up of 4 red lamps. The lower row represents 1 hour blocks and is also made up of 4 red lamps.

The final two rows represent the minutes. The upper row represents 5 minute blocks, and is made up of 11 lamps- every third lamp is red, the rest are yellow. The bottom row represents 1 minute blocks, and is made up of 4 yellow lamps.

## Motivation

Doing kata is a good way to either enhance its skills in programming and to learn a language.
It's why I have decided to do some kata to learn functional programming and Scala.

## Installation

If you want to do the kata, you can clone the master branch to start the kata.
    git clone -b master https://github.com/herveDarritchon/berlin-clock-scala-kata.git

## Tests

I have done a branch for unitary test if you want. Test are not implemented. You just have the squeleton of the tests using FeatureSpec with Matchers and GivenWhenThen.
It's a good way to start, I have provided a branch with only the tests and you have to code the app.
    git clone -b tdd https://github.com/herveDarritchon/berlin-clock-scala-kata.git

If you want, there is another branch with implemented Tests based on a String return Type for the Berlin Clock.
    git clone -b tdd-string https://github.com/herveDarritchon/berlin-clock-scala-kata.git

## Contributors

Feel free to fork, pull request or what ever you want or need ;)

## License

Licensed under the Apache License, Version 2.0 (the "License");",
    "google": "",
    "note": "Don't delete this file! It's used internally to help with page regeneration."
}
